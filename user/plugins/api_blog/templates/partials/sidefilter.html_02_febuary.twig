<style>
		body, html {
		  margin: 0;
		  padding: 0;
		  height: 100%;
		}
        /* Styles for the loader */
        .loader {
            border: 8px solid #f3f3f3;
            border-top: 8px solid #3498db;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            display: none; /* Initially hide the loader */
            position: absolute;
            top: 50%;
            left: 50%;
            margin-top: -25px; /* Half of the loader's height */
            margin-left: -25px; /* Half of the loader's width */
			z-index:999;
			
        }

        /* Animation for the loader */
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
		
 </style>
{% set tagparam = uri.param('tag') %}
{% set categoryparam = uri.param('category') %}

<div class="row filterdropdown">	
   <div id="loader" class="loader"></div>
    <form action="{{base_url}}/jobs" method="post">
	    <input type="hidden" name="sidebarsearch" value="1">
        <h4 class="apply-filters-heading"> Apply Filters </h4>
		<!-- Select industry -->
        <h3 class="sidebar-select-option-heading">Select industry </h3>
	
		<div class="opt-val">
			{% for industry in all_tags %}
			{% if industry in selectedIndustries %}
				{# Display checkbox for selected industry with additional content #}
				<input type="checkbox"  id="industry_{{ loop.index }}" value="{{ industry }}" class="common-class industry-checkbox" checked>
				<label>{{ industry }}</label><br>
			{% else %}
				{# Display checkbox for non-selected industry #}
				<input type="checkbox" id="industry_{{ loop.index }}" name="industry[]" value="{{ industry }}" class="common-class industry-checkbox">
				<label for="industry_{{ loop.index }}">{{ industry }}</label><br>
			{% endif %}
		{% endfor %}

        </div>
		<!-- Select industry end -->
		
        <h3 class="sidebar-select-option-heading">Select Archtype </h3>
		
		<div class="opt-val">
			<!-- Container to display selected archetype -->
			<div id="selectedArchetype"></div> 
			<!-- {% if selectedCategoryparams is defined and selectedCategoryparams is not empty %}
				<div id="selectedArchetype">
					{% for categoryParam in selectedCategoryparams %}
						<input type="checkbox" name="categoryparam[]" value="{{ categoryParam }}" class="catclass"  checked>
						<label for="categoryparam_{{ loop.index }}" class="catlabel">{{ categoryParam }}</label><br>
					{% endfor %}
				</div>
			{% else %}
				<div id="selectedArchetype"></div>
			{% endif %} -->
 
		</div>	
		<input type="hidden" value="" id="selectedarchtype" name="selectedarchtype">
		
		<!-- Enter Location -->
		<h3 class="sidebar-select-option-heading">Enter Location </h3>
		<div class="opt-val">
			 <input type="input" id="Location" name="location" value="{% if selectedLocation %}{{ selectedLocation }}{% endif %}" placeholder="Enter City ">
		</div>
		 
		 <!-- <div class="opt-val">
			<input type="input" id="Location" name="location" value="{{ industry }}" placeholder="Enter City">
			<label for="{{ industry }}"> {{ industry }}</label><br>
		</div>	
			  -->
		
		<!--Job Age  -->
		 <h3 class="sidebar-select-option-heading">Job Age  </h3>
			<div class="opt-val">
			<select class="sidebar-select-option" id="timeFrame" name="timeFrame">
				<option value="">Select Job Age</option>
				{% for option in ['This week', 'This month', 'This Quarter'] %}
					{% set selected = (selectedTimeFrame == option) ? 'selected' : '' %}
					<option value="{{ option }}" {{ selected }}>{{ option }}</option>
				{% endfor %}
			</select>
				<!-- <select class= "sidebar-select-option"  id="timeFrame" name="timeFrame">
				    <option value=""> Select Job Age </option>
					<option value="This week">This week</option>
				    <option value="This month">This month</option>
					<option value="This Quarter">This Quarter</option>
				
				</select> -->
			</div>	
		<!-- PayRange  -->
		 <h3 class="sidebar-select-option-heading">PayRange </h3>
				<div class="opt-val">
				<select class="sidebar-select-option" id="payRange" name="payRange">
					<option value="">Select PayRange</option>
					{% for PayRangeoption in ['20000-80000', '50000-100000', '100000-150000', '150000-200000', '200000-1000000'] %}
						{% set selected = (selectedPayRange == PayRangeoption) ? 'selected' : '' %}
						<option value="{{ PayRangeoption }}" {{ selected }}>${{ PayRangeoption }}</option>
					{% endfor %}
				</select>

				<!-- <select  class="sidebar-select-option" id="payRange" name="payRange">
					<option value=""> Select PayRange </option>
					<option value="20000-80000">$20,000-$80,000</option>
					<option value="50000-100000">$50,000-$100,000</option>
					<option value="100000-150000">$100,000-$150,000</option>
					<option value="150000-200000">$150,000-$200,000</option>
					<option value="200000">$200,000+</option>
			  </select> -->
			</div>
		<br>
       	<button type="submit" class="btn btn-primary search-submit-btn-sidefiltr">Search</button>
    </form>
</div>



<script>

    let selectedinforms = {{ selectedCategoryparams|json_encode|raw }};

	let  indAndTags = {{ ind_and_tags|json_encode|raw }};
	//document.getElementById("loader").style.display = "block";
	document.addEventListener('DOMContentLoaded', function () {
		var selectedArchetypeContainer = document.getElementById('selectedArchetype');
		iterateCheckedCheck(indAndTags, selectedArchetypeContainer);
		
		//ArchetypeCheckboxEventListeners();
		
		var checkboxes = document.querySelectorAll('.industry-checkbox');
		//alert("dddd");
		checkboxes.forEach(function(checkbox) {
		    
		   // iterateCheckedCheck(indAndTags, selectedArchetypeContainer);
			
			checkbox.addEventListener('change', function() {
				document.getElementById("loader").style.display = "block";
				selectedArchetypeContainer.innerHTML = "";
				// Get all checked checkboxes

				
				iterateCheckedCheck(indAndTags, selectedArchetypeContainer);
				
				setTimeout(function() {
					document.getElementById("loader").style.display = "none";
				}, 3000);


			});
            
			//iterateCheckedCheck(indAndTags, selectedArchetypeContainer);



		});
		
		//Archtype check event
		
	});
	<!-- mk code -->
	function ArchetypeCheckboxEventListeners(){
		var filterDropdown = document.querySelector('.filterdropdown');
		filterDropdown.addEventListener('click', function(event) {
			if (event.target.classList.contains('arctype-checkbox')) {
				console.log('Checkbox clicked:', event.target.checked);
				//event.target.checked = true;
				if(event.target.checked) {
					// add event.target.value into selectedinforms
					
					selectedinforms.push(event.target.value);
					console.log('selectedinforms', selectedinforms);
				} 
				else {
					// remove event.target.value into selectedinforms
					var indexToRemove = selectedinforms.indexOf(stringToRemove);

					// Check if the string is found in the array
					if (indexToRemove !== -1) {
						// Remove the string from the array
						selectedinforms.splice(indexToRemove, 1);
					} 
					
					console.log('selectedinformsedf:: ', selectedinforms);
				}
			}
		});
    }	
	<!-- mk code end -->
	
	
	function iterateCheckedCheck(indAndTags, selectedArchetypeContainer){
		
		 //var checkedValues = ('{{selectedCategoryparams|join(", ") }}').split(",");
		
		var checkedCheckboxes = document.querySelectorAll('.industry-checkbox:checked');
		// Iterate through checked checkboxes
		checkedCheckboxes.forEach(function(checkedCheckbox) {
			console.log('Checked Checkbox: ', checkedCheckbox.value);
			var selectedIndustry = checkedCheckbox.value;
			
			console.log('selectedIndustry mmmmm: ', selectedIndustry);
			  if (selectedIndustry && typeof indAndTags[selectedIndustry] === 'object') {
				console.log('in if');
				console.log('indAndTags :: ',indAndTags);
				console.log('indAndTags :: ',indAndTags[selectedIndustry]);

				for (const jobTitle in indAndTags[selectedIndustry]) {
								
				// Access the job title
				console.log("Job Title:", jobTitle);

				// Access the corresponding value
				const value = indAndTags[selectedIndustry][jobTitle];
				console.log("Value:", value);
				
					if (indAndTags[selectedIndustry].hasOwnProperty(jobTitle)) {
					
					console.log('jobTitle 2:: ', jobTitle);
					
                        var checkboxw = document.createElement('input');
						checkboxw.type = 'checkbox';
						checkboxw.name = 'categoryparam[]';
						checkboxw.value = indAndTags[selectedIndustry][jobTitle];
						checkboxw.className = 'catclass arctype-checkbox';
						
						
						console.log('selectedinforms:',selectedinforms);
						
                        /*if (selectedinforms.includes(checkboxw.value)){
							checkboxw.checked= true;
						} */

						// Create label for the checkbox
						var label = document.createElement('label');
						label.htmlFor = indAndTags[selectedIndustry][jobTitle];
						label.className = 'catlabel';
						label.textContent = indAndTags[selectedIndustry][jobTitle];

						// Create line break
						var lineBreak = document.createElement('br');
						
						//code for the  Archtype change event  Start
						
						/*var archtypeCheckboxes = document.querySelectorAll('.catclass');
						archtypeCheckboxes.forEach(function(arcchecked) {
							console.log(arcchecked);
						}); */
						//code for the  Archtype change event end
						//document.getElementById("loader").style.display = "none";
						
						//var currentsel = indAndTags[selectedIndustry][jobTitle];
						/*var currentsel = indAndTags[selectedIndustry];
						console.log('currentsel:', currentsel);
						console.log('selectedinforms:',selectedinforms);
						*/
					    //currentsel.forEach(key => {value = selectedinforms;  });
                        //const everyElementPresent = selectedinforms.every(value => AllCategoryParam.includes(value));
						
                         /*if (everyElementPresent){
						 console.log('everyElementPresent:', everyElementPresent);
						}*/
						
						selectedArchetypeContainer.appendChild(checkboxw);
						selectedArchetypeContainer.appendChild(label);
						selectedArchetypeContainer.appendChild(lineBreak);
							
					}
				}
			}
		});
		
	}
	
	

</script>

	




